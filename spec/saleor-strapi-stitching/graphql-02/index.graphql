"The `Upload` scalar type represents a file upload."
scalar strapi_Upload

union strapi_GenericMorph =
    strapi_Post
  | strapi_UploadFile
  | strapi_UploadFolder
  | strapi_I18NLocale
  | strapi_UsersPermissionsPermission
  | strapi_UsersPermissionsRole
  | strapi_UsersPermissionsUser

enum strapi_PublicationState {
  LIVE
  PREVIEW
}

input strapi_BooleanFilterInput {
  and: [Boolean]
  or: [Boolean]
  not: strapi_BooleanFilterInput
  eq: Boolean
  eqi: Boolean
  ne: Boolean
  startsWith: Boolean
  endsWith: Boolean
  contains: Boolean
  notContains: Boolean
  containsi: Boolean
  notContainsi: Boolean
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  null: Boolean
  notNull: Boolean
  in: [Boolean]
  notIn: [Boolean]
  between: [Boolean]
}

input strapi_DateFilterInput {
  and: [Date]
  or: [Date]
  not: strapi_DateFilterInput
  eq: Date
  eqi: Date
  ne: Date
  startsWith: Date
  endsWith: Date
  contains: Date
  notContains: Date
  containsi: Date
  notContainsi: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  null: Boolean
  notNull: Boolean
  in: [Date]
  notIn: [Date]
  between: [Date]
}

input strapi_DateTimeFilterInput {
  and: [DateTime]
  or: [DateTime]
  not: strapi_DateTimeFilterInput
  eq: DateTime
  eqi: DateTime
  ne: DateTime
  startsWith: DateTime
  endsWith: DateTime
  contains: DateTime
  notContains: DateTime
  containsi: DateTime
  notContainsi: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  null: Boolean
  notNull: Boolean
  in: [DateTime]
  notIn: [DateTime]
  between: [DateTime]
}

input strapi_FileInfoInput {
  name: String
  alternativeText: String
  caption: String
}

input strapi_FloatFilterInput {
  and: [Float]
  or: [Float]
  not: strapi_FloatFilterInput
  eq: Float
  eqi: Float
  ne: Float
  startsWith: Float
  endsWith: Float
  contains: Float
  notContains: Float
  containsi: Float
  notContainsi: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  null: Boolean
  notNull: Boolean
  in: [Float]
  notIn: [Float]
  between: [Float]
}

input strapi_I18NLocaleFiltersInput {
  id: strapi_IDFilterInput
  name: strapi_StringFilterInput
  code: strapi_StringFilterInput
  createdAt: strapi_DateTimeFilterInput
  updatedAt: strapi_DateTimeFilterInput
  and: [strapi_I18NLocaleFiltersInput]
  or: [strapi_I18NLocaleFiltersInput]
  not: strapi_I18NLocaleFiltersInput
}

input strapi_IDFilterInput {
  and: [ID]
  or: [ID]
  not: strapi_IDFilterInput
  eq: ID
  eqi: ID
  ne: ID
  startsWith: ID
  endsWith: ID
  contains: ID
  notContains: ID
  containsi: ID
  notContainsi: ID
  gt: ID
  gte: ID
  lt: ID
  lte: ID
  null: Boolean
  notNull: Boolean
  in: [ID]
  notIn: [ID]
  between: [ID]
}

input strapi_IntFilterInput {
  and: [Int]
  or: [Int]
  not: strapi_IntFilterInput
  eq: Int
  eqi: Int
  ne: Int
  startsWith: Int
  endsWith: Int
  contains: Int
  notContains: Int
  containsi: Int
  notContainsi: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  null: Boolean
  notNull: Boolean
  in: [Int]
  notIn: [Int]
  between: [Int]
}

input strapi_JSONFilterInput {
  and: [JSON]
  or: [JSON]
  not: strapi_JSONFilterInput
  eq: JSON
  eqi: JSON
  ne: JSON
  startsWith: JSON
  endsWith: JSON
  contains: JSON
  notContains: JSON
  containsi: JSON
  notContainsi: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  null: Boolean
  notNull: Boolean
  in: [JSON]
  notIn: [JSON]
  between: [JSON]
}

input strapi_PaginationArg {
  page: Int
  pageSize: Int
  start: Int
  limit: Int
}

input strapi_PostFiltersInput {
  id: strapi_IDFilterInput
  content: strapi_StringFilterInput
  title: strapi_StringFilterInput
  created: strapi_DateFilterInput
  createdAt: strapi_DateTimeFilterInput
  updatedAt: strapi_DateTimeFilterInput
  publishedAt: strapi_DateTimeFilterInput
  and: [strapi_PostFiltersInput]
  or: [strapi_PostFiltersInput]
  not: strapi_PostFiltersInput
}

input strapi_PostInput {
  content: String
  title: String
  created: Date
  publishedAt: DateTime
}

input strapi_StringFilterInput {
  and: [String]
  or: [String]
  not: strapi_StringFilterInput
  eq: String
  eqi: String
  ne: String
  startsWith: String
  endsWith: String
  contains: String
  notContains: String
  containsi: String
  notContainsi: String
  gt: String
  gte: String
  lt: String
  lte: String
  null: Boolean
  notNull: Boolean
  in: [String]
  notIn: [String]
  between: [String]
}

input strapi_UploadFileFiltersInput {
  id: strapi_IDFilterInput
  name: strapi_StringFilterInput
  alternativeText: strapi_StringFilterInput
  caption: strapi_StringFilterInput
  width: strapi_IntFilterInput
  height: strapi_IntFilterInput
  formats: strapi_JSONFilterInput
  hash: strapi_StringFilterInput
  ext: strapi_StringFilterInput
  mime: strapi_StringFilterInput
  size: strapi_FloatFilterInput
  url: strapi_StringFilterInput
  previewUrl: strapi_StringFilterInput
  provider: strapi_StringFilterInput
  provider_metadata: strapi_JSONFilterInput
  folder: strapi_UploadFolderFiltersInput
  folderPath: strapi_StringFilterInput
  createdAt: strapi_DateTimeFilterInput
  updatedAt: strapi_DateTimeFilterInput
  and: [strapi_UploadFileFiltersInput]
  or: [strapi_UploadFileFiltersInput]
  not: strapi_UploadFileFiltersInput
}

input strapi_UploadFileInput {
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: JSON
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  previewUrl: String
  provider: String
  provider_metadata: JSON
  folder: ID
  folderPath: String
}

input strapi_UploadFolderFiltersInput {
  id: strapi_IDFilterInput
  name: strapi_StringFilterInput
  pathId: strapi_IntFilterInput
  parent: strapi_UploadFolderFiltersInput
  children: strapi_UploadFolderFiltersInput
  files: strapi_UploadFileFiltersInput
  path: strapi_StringFilterInput
  createdAt: strapi_DateTimeFilterInput
  updatedAt: strapi_DateTimeFilterInput
  and: [strapi_UploadFolderFiltersInput]
  or: [strapi_UploadFolderFiltersInput]
  not: strapi_UploadFolderFiltersInput
}

input strapi_UploadFolderInput {
  name: String
  pathId: Int
  parent: ID
  children: [ID]
  files: [ID]
  path: String
}

input strapi_UsersPermissionsLoginInput {
  identifier: String!
  password: String!
  provider: String! = "local"
}

input strapi_UsersPermissionsPermissionFiltersInput {
  id: strapi_IDFilterInput
  action: strapi_StringFilterInput
  role: strapi_UsersPermissionsRoleFiltersInput
  createdAt: strapi_DateTimeFilterInput
  updatedAt: strapi_DateTimeFilterInput
  and: [strapi_UsersPermissionsPermissionFiltersInput]
  or: [strapi_UsersPermissionsPermissionFiltersInput]
  not: strapi_UsersPermissionsPermissionFiltersInput
}

input strapi_UsersPermissionsRegisterInput {
  username: String!
  email: String!
  password: String!
}

input strapi_UsersPermissionsRoleFiltersInput {
  id: strapi_IDFilterInput
  name: strapi_StringFilterInput
  description: strapi_StringFilterInput
  type: strapi_StringFilterInput
  permissions: strapi_UsersPermissionsPermissionFiltersInput
  users: strapi_UsersPermissionsUserFiltersInput
  createdAt: strapi_DateTimeFilterInput
  updatedAt: strapi_DateTimeFilterInput
  and: [strapi_UsersPermissionsRoleFiltersInput]
  or: [strapi_UsersPermissionsRoleFiltersInput]
  not: strapi_UsersPermissionsRoleFiltersInput
}

input strapi_UsersPermissionsRoleInput {
  name: String
  description: String
  type: String
  permissions: [ID]
  users: [ID]
}

input strapi_UsersPermissionsUserFiltersInput {
  id: strapi_IDFilterInput
  username: strapi_StringFilterInput
  email: strapi_StringFilterInput
  provider: strapi_StringFilterInput
  password: strapi_StringFilterInput
  resetPasswordToken: strapi_StringFilterInput
  confirmationToken: strapi_StringFilterInput
  confirmed: strapi_BooleanFilterInput
  blocked: strapi_BooleanFilterInput
  role: strapi_UsersPermissionsRoleFiltersInput
  createdAt: strapi_DateTimeFilterInput
  updatedAt: strapi_DateTimeFilterInput
  and: [strapi_UsersPermissionsUserFiltersInput]
  or: [strapi_UsersPermissionsUserFiltersInput]
  not: strapi_UsersPermissionsUserFiltersInput
}

input strapi_UsersPermissionsUserInput {
  username: String
  email: String
  provider: String
  password: String
  resetPasswordToken: String
  confirmationToken: String
  confirmed: Boolean
  blocked: Boolean
  role: ID
}

type Mutation {
  strapi_createPost(data: strapi_PostInput!): strapi_PostEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_updatePost(
    id: ID!
    data: strapi_PostInput!
  ): strapi_PostEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_deletePost(id: ID!): strapi_PostEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_createUploadFile(
    data: strapi_UploadFileInput!
  ): strapi_UploadFileEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_updateUploadFile(
    id: ID!
    data: strapi_UploadFileInput!
  ): strapi_UploadFileEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_deleteUploadFile(id: ID!): strapi_UploadFileEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_createUploadFolder(
    data: strapi_UploadFolderInput!
  ): strapi_UploadFolderEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_updateUploadFolder(
    id: ID!
    data: strapi_UploadFolderInput!
  ): strapi_UploadFolderEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_deleteUploadFolder(id: ID!): strapi_UploadFolderEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_upload(
    refId: ID
    ref: String
    field: String
    info: strapi_FileInfoInput
    file: strapi_Upload!
  ): strapi_UploadFileEntityResponse!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_multipleUpload(
    refId: ID
    ref: String
    field: String
    files: [strapi_Upload]!
  ): [strapi_UploadFileEntityResponse]!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_updateFileInfo(
    id: ID!
    info: strapi_FileInfoInput
  ): strapi_UploadFileEntityResponse!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_removeFile(id: ID!): strapi_UploadFileEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Create a new role"
  strapi_createUsersPermissionsRole(
    data: strapi_UsersPermissionsRoleInput!
  ): strapi_UsersPermissionsCreateRolePayload
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Update an existing role"
  strapi_updateUsersPermissionsRole(
    id: ID!
    data: strapi_UsersPermissionsRoleInput!
  ): strapi_UsersPermissionsUpdateRolePayload
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Delete an existing role"
  strapi_deleteUsersPermissionsRole(
    id: ID!
  ): strapi_UsersPermissionsDeleteRolePayload
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Create a new user"
  strapi_createUsersPermissionsUser(
    data: strapi_UsersPermissionsUserInput!
  ): strapi_UsersPermissionsUserEntityResponse!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Update an existing user"
  strapi_updateUsersPermissionsUser(
    id: ID!
    data: strapi_UsersPermissionsUserInput!
  ): strapi_UsersPermissionsUserEntityResponse!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Delete an existing user"
  strapi_deleteUsersPermissionsUser(
    id: ID!
  ): strapi_UsersPermissionsUserEntityResponse!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_login(
    input: strapi_UsersPermissionsLoginInput!
  ): strapi_UsersPermissionsLoginPayload!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Register a user"
  strapi_register(
    input: strapi_UsersPermissionsRegisterInput!
  ): strapi_UsersPermissionsLoginPayload!
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Request a reset password token"
  strapi_forgotPassword(email: String!): strapi_UsersPermissionsPasswordPayload
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Reset user password. Confirm with a code (resetToken from forgotPassword)"
  strapi_resetPassword(
    password: String!
    passwordConfirmation: String!
    code: String!
  ): strapi_UsersPermissionsLoginPayload
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Change user password. Confirm with the current password."
  strapi_changePassword(
    currentPassword: String!
    password: String!
    passwordConfirmation: String!
  ): strapi_UsersPermissionsLoginPayload
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  "Confirm an email users email address"
  strapi_emailConfirmation(
    confirmation: String!
  ): strapi_UsersPermissionsLoginPayload
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
}

type Query {
  strapi_post(id: ID): strapi_PostEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_posts(
    filters: strapi_PostFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
    publicationState: strapi_PublicationState = LIVE
  ): strapi_PostEntityResponseCollection
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_uploadFile(id: ID): strapi_UploadFileEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_uploadFiles(
    filters: strapi_UploadFileFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UploadFileEntityResponseCollection
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_uploadFolder(id: ID): strapi_UploadFolderEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_uploadFolders(
    filters: strapi_UploadFolderFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UploadFolderEntityResponseCollection
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_i18NLocale(id: ID): strapi_I18NLocaleEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_i18NLocales(
    filters: strapi_I18NLocaleFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_I18NLocaleEntityResponseCollection
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_usersPermissionsRole(
    id: ID
  ): strapi_UsersPermissionsRoleEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_usersPermissionsRoles(
    filters: strapi_UsersPermissionsRoleFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UsersPermissionsRoleEntityResponseCollection
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_usersPermissionsUser(
    id: ID
  ): strapi_UsersPermissionsUserEntityResponse
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_usersPermissionsUsers(
    filters: strapi_UsersPermissionsUserFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UsersPermissionsUserEntityResponseCollection
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
  strapi_me: strapi_UsersPermissionsMe
    @graphql(
      endpoint: "https://0090-90-187-201-249.eu.ngrok.io/graphql"
      prefix: { includeRootOperations: true, value: "strapi_" }
    )
}

type strapi_I18NLocale {
  name: String
  code: String
  createdAt: DateTime
  updatedAt: DateTime
}

type strapi_I18NLocaleEntity {
  id: ID
  attributes: strapi_I18NLocale
}

type strapi_I18NLocaleEntityResponse {
  data: strapi_I18NLocaleEntity
}

type strapi_I18NLocaleEntityResponseCollection {
  data: [strapi_I18NLocaleEntity!]!
  meta: strapi_ResponseCollectionMeta!
}

type strapi_Pagination {
  total: Int!
  page: Int!
  pageSize: Int!
  pageCount: Int!
}

type strapi_Post {
  content: String
  title: String
  created: Date
  createdAt: DateTime
  updatedAt: DateTime
  publishedAt: DateTime
}

type strapi_PostEntity {
  id: ID
  attributes: strapi_Post
}

type strapi_PostEntityResponse {
  data: strapi_PostEntity
}

type strapi_PostEntityResponseCollection {
  data: [strapi_PostEntity!]!
  meta: strapi_ResponseCollectionMeta!
}

type strapi_ResponseCollectionMeta {
  pagination: strapi_Pagination!
}

type strapi_UploadFile {
  name: String!
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: JSON
  hash: String!
  ext: String
  mime: String!
  size: Float!
  url: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  related: [strapi_GenericMorph]
  createdAt: DateTime
  updatedAt: DateTime
}

type strapi_UploadFileEntity {
  id: ID
  attributes: strapi_UploadFile
}

type strapi_UploadFileEntityResponse {
  data: strapi_UploadFileEntity
}

type strapi_UploadFileEntityResponseCollection {
  data: [strapi_UploadFileEntity!]!
  meta: strapi_ResponseCollectionMeta!
}

type strapi_UploadFileRelationResponseCollection {
  data: [strapi_UploadFileEntity!]!
}

type strapi_UploadFolder {
  name: String!
  pathId: Int!
  parent: strapi_UploadFolderEntityResponse
  children(
    filters: strapi_UploadFolderFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UploadFolderRelationResponseCollection
  files(
    filters: strapi_UploadFileFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UploadFileRelationResponseCollection
  path: String!
  createdAt: DateTime
  updatedAt: DateTime
}

type strapi_UploadFolderEntity {
  id: ID
  attributes: strapi_UploadFolder
}

type strapi_UploadFolderEntityResponse {
  data: strapi_UploadFolderEntity
}

type strapi_UploadFolderEntityResponseCollection {
  data: [strapi_UploadFolderEntity!]!
  meta: strapi_ResponseCollectionMeta!
}

type strapi_UploadFolderRelationResponseCollection {
  data: [strapi_UploadFolderEntity!]!
}

type strapi_UsersPermissionsCreateRolePayload {
  ok: Boolean!
}

type strapi_UsersPermissionsDeleteRolePayload {
  ok: Boolean!
}

type strapi_UsersPermissionsLoginPayload {
  jwt: String
  user: strapi_UsersPermissionsMe!
}

type strapi_UsersPermissionsMe {
  id: ID!
  username: String!
  email: String
  confirmed: Boolean
  blocked: Boolean
  role: strapi_UsersPermissionsMeRole
}

type strapi_UsersPermissionsMeRole {
  id: ID!
  name: String!
  description: String
  type: String
}

type strapi_UsersPermissionsPasswordPayload {
  ok: Boolean!
}

type strapi_UsersPermissionsPermission {
  action: String!
  role: strapi_UsersPermissionsRoleEntityResponse
  createdAt: DateTime
  updatedAt: DateTime
}

type strapi_UsersPermissionsPermissionEntity {
  id: ID
  attributes: strapi_UsersPermissionsPermission
}

type strapi_UsersPermissionsPermissionRelationResponseCollection {
  data: [strapi_UsersPermissionsPermissionEntity!]!
}

type strapi_UsersPermissionsRole {
  name: String!
  description: String
  type: String
  permissions(
    filters: strapi_UsersPermissionsPermissionFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UsersPermissionsPermissionRelationResponseCollection
  users(
    filters: strapi_UsersPermissionsUserFiltersInput
    pagination: strapi_PaginationArg = {}
    sort: [String] = []
  ): strapi_UsersPermissionsUserRelationResponseCollection
  createdAt: DateTime
  updatedAt: DateTime
}

type strapi_UsersPermissionsRoleEntity {
  id: ID
  attributes: strapi_UsersPermissionsRole
}

type strapi_UsersPermissionsRoleEntityResponse {
  data: strapi_UsersPermissionsRoleEntity
}

type strapi_UsersPermissionsRoleEntityResponseCollection {
  data: [strapi_UsersPermissionsRoleEntity!]!
  meta: strapi_ResponseCollectionMeta!
}

type strapi_UsersPermissionsUpdateRolePayload {
  ok: Boolean!
}

type strapi_UsersPermissionsUser {
  username: String!
  email: String!
  provider: String
  confirmed: Boolean
  blocked: Boolean
  role: strapi_UsersPermissionsRoleEntityResponse
  createdAt: DateTime
  updatedAt: DateTime
}

type strapi_UsersPermissionsUserEntity {
  id: ID
  attributes: strapi_UsersPermissionsUser
}

type strapi_UsersPermissionsUserEntityResponse {
  data: strapi_UsersPermissionsUserEntity
}

type strapi_UsersPermissionsUserEntityResponseCollection {
  data: [strapi_UsersPermissionsUserEntity!]!
  meta: strapi_ResponseCollectionMeta!
}

type strapi_UsersPermissionsUserRelationResponseCollection {
  data: [strapi_UsersPermissionsUserEntity!]!
}
